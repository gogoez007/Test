function solution(relation) {
        var answer = 0; 
        important=[];
        row = relation.length;
        column = relation[0].length;
        answer = 0;
        cnt = relation[0].length;
        arr = [];
        for (i = 1; i <= cnt; i++) {
            combination(arr, 0, cnt, i, 0, row, column, relation);
        }
        answer = important.length-1;
    return answer;
}
function combination( arr,index,n,r,target,row,column,relation){
if (r == 0)
            print(arr, index, row, column, relation);
        else if (target == n)
            return;
        else {
            arr[index] = target;
            combination(arr, index + 1, n, r - 1, target + 1, row, column, relation);
            combination(arr, index, n, r, target + 1, row, column, relation);
        }
}
function print(arr,length,row,column,relation){
        arrayList = [];
        qq = "";
        uu = "";
        for (i = 0; i < length; i++) {
            qq += arr[i];
        }
        for (i = 0; i < important.length; i++) {
            uu=important[i];
            if (uu.includes(qq)) {
                return;
            }
        }
        for ( i = 0; i < row; i++) {
            temp = "";
            for (q = 0; q < length; q++) {
                temp += relation[i][arr[q]];
            }
            arrayList.push(temp);
        }
        flag = false;
        for (i = 0; i < arrayList.length - 1; i++) {
            base = arrayList[i];
            for (j = i + 1; j < arrayList.length; j++) {
                compare = arrayList[j];
                if (base==compare) {
                    flag = true;
                    break;
                }
            }
        }
        if (flag) {
            important.push(qq);
        } else {
        }
        return important;
}
console.log(solution(
[['100','ryan','music','2'],['200','apeach','math','2'],['300','tube','computer','3'],['400','con','computer','4'],['500','muzi','music','3'],['600','apeach','music','2']]
))
